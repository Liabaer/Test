# -*- coding: utf-8 -*-
# 第一题
# 获得用户输入的一个数字，对该数字以30字符宽度，十六进制，居中输出，字母小 写，多余字符采用双引号(")填充，请完善模板中代码。注（英文引号）
# s = input()
# # 由于外面已经是"号，所以内部使用要转以\"
# print("{:\"^30}".format(hex(int(s))))
# print("{:\"^30b}".format(int(s)))

# 第二题
# 从键盘输入4个数字，各数字采用空格分隔，对应变量x0,y0,x1,y1.计算两点(x0,y0) 和(x1y1)之间的距离，屏幕输出这个距离，保留2位小数。根号( (x1-x0)^2 + (y1- y0)^2)  x^n表示x的n次方
# 例如：
# 键盘输入：0 1 3 5
# 屏幕输出：5.00

# ntxt = input("请输入4个数字(空格分隔):")
# nls = ntxt.split(' ')
# x0 = eval(nls[0])
# y0 = eval(nls[1])
# x1 = eval(nls[2])
# y1 = eval(nls[3])
# # pow(x, y) 表示x的y次方 y=1/2就是根号
# x = pow(x1-x0, 2)
# y = pow(y1 - y0, 2)
# res = pow(x+y, 1/2)
# print("{:.2f}".format(res))
#
# 第三题
# 在右侧答题模板中修改代码，删除代码中的横线，填写代码，完成如下功能。
# 程序接收用户输入的五个数，以逗号分隔。将这些数按照输入顺序输出，每个数占 10个字符宽度，右对齐，所有数字显示在同一行。
# 输入：23,42,543,56,71

# num = input().split(',')
# for i in num:
#     print("{:<10}".format(i), end='')
#
# 第四题
# 在右侧答题模板中修改代码，删除代码中的横线，填写代码，完成如下功能。
# 社会平均工作时间是每天8小时。如果这位科学家的当下成就值是1，假设每工作1 小时成就值增加0.01%，计算并输出两个结果：
# 这位科学家5年后的成就值。以及 达到成就值100所需要的年数。其中，成就值和年数都以整数表示，每年以365天 计算。
# 输入输出示例
# 5年后的成就值是XXX
# XX年后成就值是100
# scale = 0.0001  # 成就值增量
#
#
# def calv(base, day):
#     val = base * pow(1+scale, 8*day)
#     return val
#
#
# print('5年后的成就值是{}'.format(int(calv(1, 5 * 365))))
#
# year = 1
# while calv(1, year*365) < 100:
#     year += 1
#
# print('{}年后成就值是100'.format(year))
#
#
# 第五题
# 接收 用户输入的一个小于20的正整数，在屏幕上逐行递增显示从01到该正整数，
# 数字 显示的宽度为2，不足位置补0，后面追加一个空格，然后显示>号，>号的个数 等于行首数字。
# 示例
# 输入：
# 3
# 输出：
# 01>
# 02>>
# 03>>
# n = input('请输入一个正整数:')                    #请输入一个正整数:
# for i in range(0, int(n)):
#     # {:>02}显示的宽度为2，不足位置补0
#     print('{:>02}{}'.format(i + 1, '>' * (i + 1)))
#


# 第六题
# 让用户输入一串数字和字母混合的数据，然后统计其中的数字和字母的个数，显示在 屏幕上。
# 示例
# 输入：
# Fda243fdw3
# 输出：
# 数字个数：4，字母个数：6
# ns = input("请输入一串数据：")
# dnum, dchr = 0, 0
# for i in ns:
#     if 47 <= ord(i) <= 58:
#         dnum += 1
#     if (ord('a') <= ord(i) <= ord('z')) or (ord('A')<= ord(i) <= ord('Z')):
#         dchr += 1
# print('数字个数：{}，字母个数：{}'.format(dnum, dchr))
#
#
# 第七题
# 从键盘输入一个字符串，检查并统计字符串中包含的英文单引号的对数。如果没有找 到单引号，就在屏幕上显示“没有单引号”；
# 每统计到2个单引号，就算一对，如果找 到2对单引号，就显示“有2对单引号”；如果找到3个单引号，就显示“有1对配对单引 号，存在没有配对的单引号”。
# 示例1：
# 输入："dfd'dfa'fd'"
# 输出："有1对配对单引号，存在没有配对的单引号”
# st = input()
# pair = 0
# for s in st:
#     if s == "'":
#         pair += 1
# if pair == 0:
#     pro = "没有单引号"
# elif pair % 2 == 0:
#     pro = "有{}对配对单引号，不存在没有配对的单引号".format(pair/2)
# else:
#    pro = "有{}对配对单引号，存在没有配对的单引号".format(int(pair/2))
# print(pro)
#
# 第八题
# 从键盘输入一个由1和0组成的二进制字符串s，转换为十进制数输出显示在屏幕 上。
# 示例1：
# 输入："1101"
# 输出："转换成十进制数是：13"

# s = input()
# d = 0

# 123 正常计算10进制  1 * 100 + 2 * 20 + 3 * 1 = 123
# 123 数学中定义（（1 * 10） + 2）* 10 + 3 = 123

# 从右到左边的计算
# 1101 正常计算二进制 1 * 2 ^ 0 + 0 * 2 ^ 1 + 1 * 2 ^ 2 + 1 * 2 ^ 3 = 13
#                   1           0           1           1
# 从左到右的计算
# 1101 数学中定义 （（1 * 2 + 1） * 2 + 0） * 2 + 1 = 13
#                  1       1         0         1
# while s:
#     d = d * 2 + int(s[0])
#     # 等价与s = s[1: len(s)] 每次删除首位
#     s = s[1:]
# print("转换成十进制数是：{}".format(d))
#
# 第九题
# 从键盘输入一个列表，将该列表中所有的单词首字母转换成大写，在屏幕上输出该列表。
# 示例1：
# 输入："["python","is","opening"]"
# 输出："['Python','Is','Opening'门"

# ls = eval(input())
# for i in range(len(ls)):
#     # s.capitalize() 将首字母转换成大写
#     ls[i] = ls[i].capitalize()
# print(ls)
#
# 第十题
# 苏格拉底是古希腊著名的思想家、哲学家、教育家、公民陪审员。苏格拉底的部分 名言被翻译为中文，其部分内容由sgd.txt给出。
# 读取文件，请过滤中文逗号、中文句号、中文冒号、中文引号，英文空格、换行符 n之后，
# 对其中的内容进行中文分词，在屏幕上显示输出词语出现次数前5的词，用一个中文 顿号、分割。
# 示例1：
# 输入：无
# 输出："你、我、他、我们、他们、" 注意：这里的输出只是示例